plugins {
    id 'java'
    id'io.github.goooler.shadow' version '8.1.7'
}

group = 'me.Lukaos187'
version = '1.19-1.0.0'

repositories {
    mavenCentral()
    maven {///spigot
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    /*maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url 'https://jitpack.io'
    }*/
    maven {//Anvil GUI
        name = "codemc-snapshots"
        url = "https://repo.codemc.io/repository/maven-snapshots/"
    }
    maven {
        url 'https://repo.papermc.io/repository/maven-public/'
    }

}

dependencies {
    compileOnly "org.spigotmc:spigot-api:1.20.1-R0.1-SNAPSHOT"
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation 'org.json:json:20210307'
    implementation 'net.wesjd:anvilgui:1.9.6-SNAPSHOT'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

testing {
    suites {
        test {
            useJUnitJupiter('5.10.3')
            dependencies {
                compileOnly "org.spigotmc:spigot-api:1.20.1-R0.1-SNAPSHOT"
                implementation 'com.github.seeseemelk:MockBukkit-v1.20:3.88.1'
                runtimeOnly 'org.slf4j:slf4j-nop:2.0.9'
            }
        }
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
